package MyShapes.Enhanced.behavior;

/*Generated by MPS */

import javax.swing.JPanel;
import org.jetbrains.mps.openapi.module.ModelAccess;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.awt.Graphics;
import java.awt.Dimension;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;

public abstract class ShapePreviewComponent extends JPanel {
  private ModelAccess modelAccess;
  public ShapePreviewComponent(SNode node) {
    modelAccess = SNodeOperations.getModel(node).getRepository().getModelAccess();
  }
  @Override
  protected void paintComponent(final Graphics g) {
    setOpaque(false);
    super.paintComponent(g);
    modelAccess.runReadAction(new Runnable() {
      public void run() {
        DrawShape(g);
      }
    });
  }

  protected abstract void DrawShape(Graphics g);

  @Override
  public Dimension getPreferredSize() {
    final Wrappers._T<Dimension> dimension = new Wrappers._T<Dimension>(new Dimension());
    modelAccess.runReadAction(new Runnable() {
      public void run() {
        dimension.value = GetDimension();
      }
    });
    return dimension.value;
  }

  protected abstract Dimension GetDimension();
}
